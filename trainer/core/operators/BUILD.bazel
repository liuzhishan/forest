package(default_visibility = ["//visibility:public"])

load(
    "//:tools/build/tensorflow_io.bzl",
    "tf_io_copts",
)

cc_binary(
    name = "sniper_ops.so",
    srcs = [
        "kernels/prefetch_dataset_kernels.cc",
        "ops/prefetch_dataset_ops.cc",

        "kernels/create_embedding_table_kernels.cc",
        "ops/create_embedding_table_ops.cc",

        "kernels/create_dense_kernels.cc",
        "ops/create_dense_ops.cc",

        "kernels/start_sample_kernels.cc",
        "ops/start_sample_ops.cc",

        "kernels/push_grad_kernels.cc",
        "ops/push_grad_ops.cc",

        "kernels/push_variable_kernels.cc",
        "ops/push_variable_ops.cc",

        "kernels/pull_variable_kernels.cc",
        "ops/pull_variable_ops.cc",

        "kernels/save_kernels.cc",
        "ops/save_ops.cc",

        "kernels/restore_kernels.cc",
        "ops/restore_ops.cc",

        "kernels/freeze_kernels.cc",
        "ops/freeze_ops.cc",

        "kernels/check_ckp_kernels.cc",
        "ops/check_ckp_ops.cc",

        "kernels/count_feature_kernels.cc",
        "ops/count_feature_ops.cc",

        "kernels/save_feature_count_kernels.cc",
        "ops/save_feature_count_ops.cc",

        "kernels/restore_feature_count_kernels.cc",
        "ops/restore_feature_count_ops.cc"

    ],
    copts = tf_io_copts(),
    linkshared = 1,
    deps = [
        ":feed_queue_ops",
    ]
)

cc_library(
    name = "train_config",
    hdrs = [
        "kernels/train_config.h",
    ],
    srcs = [
        "kernels/train_config.cc",
    ],
    deps = [
        "//core/proto:train_config_proto",
        "@jsoncpp_git//:jsoncpp",
        "//core/base:base",
        "//core/common/spdlog:headers",
        "//core/util/monitor:monitor",
        "//core/util/placement:feature_placement",
	    "@com_google_absl//absl/types:optional"
    ],
)

cc_library(
    name = "feed_queue_ops",
    srcs = [
        "kernels/feed_queue.h",
        "kernels/feed_queue.cc",
    ],
    copts = tf_io_copts(),
    deps = [
        "@local_config_tf//:libtensorflow_framework",
        "@local_config_tf//:tf_header_lib",
        "//core/rpc/grpc:grpc_client",
        ":train_config",
        "//core/base:base",
        "@com_google_absl//absl/types:optional"
    ],
)
