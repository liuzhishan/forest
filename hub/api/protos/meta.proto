syntax = "proto3";

package sniper;

import "google/protobuf/any.proto";

enum Role {
  ROLE_INVALID = 0;
  ROLE_SCHEDULER = 1;
  ROLE_TRAINER = 2;
  ROLE_PS = 4;
  ROLE_HUB = 8;
}

enum DataType {
  DT_INVALID = 0;

  // Data types that all computation devices are expected to be
  // capable to support.
  DT_FLOAT = 1;
  DT_DOUBLE = 2;
  DT_INT32 = 3;
  DT_UINT8 = 4;
  DT_INT16 = 5;
  DT_INT8 = 6;
  DT_STRING = 7;
  DT_COMPLEX64 = 8; // Single-precision complex
  DT_INT64 = 9;
  DT_BOOL = 10;
  DT_QINT8 = 11;    // Quantized int8
  DT_QUINT8 = 12;   // Quantized uint8
  DT_QINT32 = 13;   // Quantized int32
  DT_BFLOAT16 = 14; // Float32 truncated to 16 bits.  Only for cast ops.
  DT_QINT16 = 15;   // Quantized int16
  DT_QUINT16 = 16;  // Quantized uint16
  DT_UINT16 = 17;
  DT_COMPLEX128 = 18; // Double-precision complex
  DT_HALF = 19;
  DT_RESOURCE = 20;
  DT_VARIANT = 21; // Arbitrary C++ data types
  DT_UINT32 = 22;
  DT_UINT64 = 23;
}

message TensorShapeProto { repeated int64 dim = 1; }

message TensorProto {
  DataType dtype = 1;
  TensorShapeProto tensor_shape = 2;
  bytes tensor_content = 3;

  repeated float float_val = 4;
  repeated uint64 uint64_val = 5;
}

message TensorMessage {
  Role role = 1;
  uint32 role_id = 2;
  uint64 seq_id = 3;
  string varname = 4;
  google.protobuf.Any options = 5;

  TensorProto tensor1 = 10;
  TensorProto tensor2 = 11;
}

message VoidMessage {}
